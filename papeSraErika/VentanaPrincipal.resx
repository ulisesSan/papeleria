<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        7NzAQvHPVAAAAABJRU5ErkJggg==
</value>
  </data>
</root>